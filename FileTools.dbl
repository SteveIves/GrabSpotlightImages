
import System.IO
import System.Linq
import System.Security.Cryptography
import System.Text

.array 0

namespace GrabSpotlightImages

	public static class FileTools

		public static method FileEquals, boolean
			fileName1, string
			fileName2, string
		proc
			;;  Check the file size and CRC equality here.. if they are equal...
			disposable data file1 = new FileStream(fileName1, FileMode.Open)
			disposable data file2 = new FileStream(fileName2, FileMode.Open)
			mreturn FileStreamEquals(file1, file2)
		endmethod

		public static method FileStreamEquals, boolean
			stream1, @Stream
			stream2, @Stream
		proc
			data bufferSize, int, 2048
			data buffer1, [#]byte, new byte[bufferSize]
			data buffer2, [#]byte, new byte[bufferSize]

			repeat
			begin
				data count1, int, stream1.Read(buffer1, 0, bufferSize)
				data count2, int, stream2.Read(buffer2, 0, bufferSize)

				if (count1 != count2)
					mreturn false

				if (count1 == 0)
					mreturn true

				if (!buffer1.Take(count1).SequenceEqual(buffer2.Take(count2)))
					mreturn false
			end
		endmethod

		public static method GetFileHash, string
			required in fileSpec, string
			endparams
		proc
			disposable data crypto = MD5.Create()
			disposable data stm = File.OpenRead(fileSpec)
			data hash = crypto.ComputeHash(stm)
			data sb = new StringBuilder()
			data ix, int

			for ix from 0 thru hash.GetUpperBound(0)
				sb.Append(hash[ix].ToString("x2"))

			mreturn sb.ToString()

		endmethod

	endclass

endnamespace
